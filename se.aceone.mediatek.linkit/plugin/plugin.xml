<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
	<extension point="org.eclipse.ui.menus">

		<menuContribution
			locationURI="popup:org.eclipse.ui.navigator.ProjectExplorer#PopupMenu?after=additions">
			<command commandId="se.aceone.mediatek.linkit.commands.updateproj"
				label="Update project file" mnemonic="M1+U">
				<visibleWhen>
					<iterate operator="and">
						<test property="org.eclipse.core.resources.projectNature"
							value="org.eclipse.cdt.core.cnature" />
						<with variable="activeWorkbenchWindow.activePerspective">
							<equals value="org.eclipse.cdt.ui.CPerspective" />
						</with>
					</iterate>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension point="org.eclipse.ui.newWizards">
		<category id="se.aceone.mediatek.linkit.newWizards" name="LinkIt">
		</category>
		<wizard canFinishEarly="false" category="se.aceone.mediatek.linkit.newWizards"
			class="se.aceone.mediatek.linkit.ui.NewLinkit10ProjectWizard"
			finalPerspective="org.eclipse.cdt.ui.CPerspective" icon="icons/16px-Nuvola_devices_ksim_cpu.png"
			id="se.aceone.mediatek.linkit.NewLinkit10ProjectWizard" name="New LinkIt 1.0 Project"
			project="true">
			<description>
				%wizard.description
			</description>
		</wizard>
		<wizard canFinishEarly="false" category="se.aceone.mediatek.linkit.newWizards"
			class="se.aceone.mediatek.linkit.ui.NewLinkit20ProjectWizard"
			finalPerspective="org.eclipse.cdt.ui.CPerspective" icon="icons/16px-Nuvola_devices_ksim_cpu.png"
			id="se.aceone.mediatek.linkit.NewLinkit20ProjectWizard" name="New LinkIt 2.0 Project"
			project="true">
			<description>
				%wizard.description
			</description>
		</wizard>
	</extension>
	   <extension
         point="org.eclipse.ui.importWizards">
      <category
            name="LinkIt"
            id="se.aceone.mediatek.linkit.importWizards.linkit">
      </category>
      <wizard
            name="Import LinkIt 1.0 Project"
            icon="icons/16px-Nuvola_devices_ksim_cpu.png"
            category="se.aceone.mediatek.linkit.importWizards.linkit"
            class="se.aceone.mediatek.linkit.importWizards.ImportLinkIt10ProjectWizard"
            id="se.aceone.mediatek.linkit.importWizards.ImportLinkIt10ProjectWizard">
         <description>
            Import a existing LinkIt 1.0 project.
         </description>
      </wizard>
   </extension>
	<extension id="se.aceone.mediatek.linkit.buildDefinitions"
		name="LinkIt Tool Chain" point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
		<builder autoBuildTarget="all" cleanBuildTarget="clean"
			command="make" errorParsers="org.eclipse.cdt.core.MakeErrorParser"
			id="se.aceone.mediatek.linkit.gnu.builder" ignoreErrCmd="-k"
			incrementalBuildTarget="all" isAbstract="true"
			isVariableCaseSensitive="false" macroInputDirRelPathValue="$(dir $&lt;)"
			macroInputFileBaseNameValue="$(basename $(notdir $&lt;))"
			macroInputFileExtValue="$(suffix $(notdir $&lt;))"
			macroInputFileNameValue="$(notdir $&lt;)" macroInputFileRelPathValue="$&lt;"
			macroOutputDirRelPathValue="$(dir $@)" macroOutputFileBaseNameValue="$(basename (notdir $@))"
			macroOutputFileExtValue="$(suffix $(notdir $@)"
			macroOutputFileNameValue="$(notdir $@)" macroOutputFileRelPathValue="$@"
			name="LinkIt GNU Builder" parallelBuildCmd="-j*"
			reservedMacroNames="ROOT,DEPS,OBJS,.*_SRCS,EXECUTABLES,SUBDIRS,LIBS,USER_OBJS,.*_INPUTS,.*_OUTPUTS"
			variableFormat="${=}">
		</builder>
		<projectType id="se.aceone.mediatek.linkit.projectType"
			isAbstract="false" name="LinkIt">
			<configuration artifactExtension="vxp" cleanCommand="rm -f"
				id="se.aceone.mediatek.linkit.configuration" name="Default">
				<toolChain archList="all"
					id="se.aceone.mediatek.linkit.toolChain.default.gcc" isAbstract="false"
					name="LinkIt Tool Chain (GCC)" osList="all"
					targetTool="se.aceone.mediatek.linkit.tool.size">
					<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF"
						id="se.aceone.mediatek.linkit.targetplatform" name="LinkIt Target"
						osList="all">
					</targetPlatform>
					<builder id="se.aceone.mediatek.linkit.builder"
						isVariableCaseSensitive="false" name="LinkIt Builder"
						reservedMacroNames="LinkItSDK20" superClass="se.aceone.mediatek.linkit.gnu.builder">
					</builder>
					<optionCategory
						id="se.aceone.mediatek.linkit.optionCategory.includePaths" name="Include Folders">
					</optionCategory>
					<tool announcement="Starting C++ compile"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${GCCCPPCOMPILER}"
						commandLinePattern="&quot;${COMMAND}&quot; ${GCCTCCCOMPILER} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX} -o ${OUTPUT} -c ${INPUTS}"
						errorParsers="org.eclipse.cdt.core.GCCErrorParser" id="se.aceone.mediatek.linkit.compiler.cpp"
						name="C++ Compiler" natureFilter="both">
						<optionCategory
							id="se.aceone.mediatek.linkit.cpp.optionCategory.includePaths"
							name="Include Path">
						</optionCategory>
						<option browseType="directory"
							category="se.aceone.mediatek.linkit.cpp.optionCategory.includePaths"
							command="-I" id="se.aceone.mediatek.linkit.compiler.cpp.option.incpath"
							name="C++ Include Path" resourceFilter="project" valueType="includePath">
						</option>
						<optionCategory
							id="se.aceone.mediatek.linkit.cpp.optionCategory.macros" name="Macros">
						</optionCategory>
						<option browseType="none"
							category="se.aceone.mediatek.linkit.cpp.optionCategory.macros"
							command="-D" id="se.aceone.mediatek.linkit.compiler.cpp.option.macros"
							name="C++ Macros" resourceFilter="project" valueType="definedSymbols">
						</option>
						<inputType buildVariable="CPP_SKETCH_FILES"
							dependencyContentType="org.eclipse.cdt.core.cxxHeader" id="se.aceone.mediatek.linkit.input"
							name="C++ Source" primaryInput="true" sourceContentType="org.eclipse.cdt.core.cxxSource">
						</inputType>
						<outputType buildVariable="LINK_OBJ"
							id="se.aceone.mediatek.linkit.link.output" name="C++ Link Object"
							nameProvider="se.aceone.mediatek.linkit.toolchain.LinkNameProvider"
							outputs="o" primaryOutput="true">
						</outputType>
						<!-- <outputType buildVariable="AR_OBJ" id="se.aceone.mediatek.linkit.compiler.cpp.ar.output" 
							name="C++ AR Object" nameProvider="se.aceone.mediatek.linkit.ArchiveNameProvider" 
							outputs="o" primaryOutput="true"> </outputType> -->
					</tool>
					<tool announcement="Starting C compile"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${GCCCCOMPILER}"
						commandLinePattern="&quot;${COMMAND}&quot; ${GCCCOMPILER} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX} -o ${OUTPUT} -c ${INPUTS}"
						errorParsers="org.eclipse.cdt.core.GCCErrorParser" id="se.aceone.mediatek.linkit.compiler.c"
						name="C Compiler" natureFilter="both">
						<optionCategory
							id="se.aceone.mediatek.linkit.c.optionCategory.includePaths"
							name="Include Path">
						</optionCategory>
						<option browseType="directory"
							category="se.aceone.mediatek.linkit.c.optionCategory.includePaths"
							command="-I" id="se.aceone.mediatek.linkit.compiler.c.option.incpath"
							name="C Include Path" resourceFilter="project" valueType="includePath">
						</option>
						<optionCategory
							id="se.aceone.mediatek.linkit.c.optionCategory.macros" name="Macros">
						</optionCategory>
						<option browseType="none"
							category="se.aceone.mediatek.linkit.c.optionCategory.macros"
							command="-D" id="se.aceone.mediatek.linkit.compiler.c.option.macros"
							name="C Macros" resourceFilter="project" valueType="definedSymbols">
						</option>
						<inputType buildVariable="C_SKETCH_FILES"
							dependencyContentType="org.eclipse.cdt.core.cHeader"
							id="se.aceone.mediatek.linkit.compiler.c.input" multipleOfType="false"
							name="C Source" primaryInput="true" sourceContentType="org.eclipse.cdt.core.cSource">
						</inputType>
						<outputType buildVariable="LINK_OBJ"
							id="se.aceone.mediatek.linkit.compiler.c.link.output" name="C Link Object"
							nameProvider="se.aceone.mediatek.linkit.toolchain.LinkNameProvider"
							outputs="o" primaryOutput="true">
						</outputType>
						<!-- <outputType buildVariable="AR_OBJ" id="se.aceone.mediatek.linkit.compiler.c.ar.output" 
							name="C AR Object" nameProvider="se.aceone.mediatek.linkit.toolchain.ArchiveNameProvider" 
							outputs="o" primaryOutput="true"> </outputType> -->
					</tool>
					<!-- <tool announcement="Starting ASM compile" command="${LINKITSDK20}${GCCLOCATION}/${COMPILERTOOLPATH}/${ARMARGCC}" 
						commandLinePattern=" ${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX} 
						${OUTPUT} ${INPUTS}" errorParsers="org.eclipse.cdt.core.GCCErrorParser" id="se.aceone.mediatek.linkit.compiler.s" 
						name="ASM Compiler" natureFilter="both"> <inputType buildVariable="S_SKETCH_FILES" 
						dependencyCalculator="se.aceone.mediatek.linkit.toolchain.ArduinoDependencyCalculator" 
						dependencyContentType="org.eclipse.cdt.core.cxxHeader" id="se.aceone.mediatek.linkit.compiler.S.sketch.input" 
						name="ASM Source" primaryInput="true" sourceContentType="org.eclipse.cdt.core.asmSource"> 
						</inputType> <outputType buildVariable="LINK_OBJ" id="se.aceone.mediatek.linkit.compiler.S.sketch.link.output" 
						name="ASM Link Object" nameProvider="se.aceone.mediatek.linkit.toolchain.LinkNameProvider" 
						outputs="o" primaryOutput="true"> </outputType> <outputType buildVariable="AR_OBJ" 
						id="se.aceone.mediatek.linkit.compiler.S.ar.output" name="ASM AR Object" 
						nameProvider="se.aceone.mediatek.linkit.toolchain.ArchiveNameProvider" outputs="o" 
						primaryOutput="true"> </outputType> </tool> -->
					<!-- <tool announcement="Starting archiver" command="${LINKITSDK20}${GCCLOCATION}/${COMPILERTOOLPATH}/${ARMARGCC}" 
						errorParsers="org.eclipse.cdt.core.GLDErrorParser" id="se.aceone.mediatek.linkit.tool.archiver" 
						name="Archiver"> <outputType buildVariable="AR" id="se.aceone.mediatek.linkit.tool.archiver.output" 
						name="Archiver output" outputNames="${A.ARCHIVE_FILE}" outputs="ar" primaryOutput="true"> 
						</outputType> <inputType assignToOption="A.OBJECT_FILE" buildVariable="AR_OBJ" 
						id="se.aceone.mediatek.linkit.tool.archiver.input" multipleOfType="true" 
						name="Archiver input" primaryInput="false" sources="o"> </inputType> </tool> -->
					<tool announcement="Starting Linker"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${GCCLINK}"
						commandLineGenerator="se.aceone.mediatek.linkit.toolchain.GCCLinkerCommadLineGenerator"
						commandLinePattern="&quot;${COMMAND}&quot; ${GCCTLINKER} -B ${ARMNONEEABITHUMB} -T &quot;${LINKIT10}/${GCCTCCLIB}/scat.ld&quot; -o ${OUTPUT} ${INPUTS} &quot;${LINKIT10}/${GCCLIB}/${COMMONLIB}&quot; "
						errorParsers="org.eclipse.cdt.core.GLDErrorParser" id="se.aceone.mediatek.linkit.tool.linker"
						name="Linker" natureFilter="both">
						<inputType buildVariable="LINK_OBJ"
							id="se.aceone.mediatek.linkit.tool.linker.ob.input"
							multipleOfType="true" name="Linker input" primaryInput="true"
							sources="o">
						</inputType>
						<outputType buildVariable="AXF_DATA"
							id="se.aceone.mediatek.linkit.tool.linker.data.output"
							multipleOfType="false" name="Linker output axf" outputNames="${ProjName}.axf"
							outputs="axf" primaryOutput="true">
						</outputType>
						<outputType buildVariable="DBG"
							id="se.aceone.mediatek.linkit.tool.linker.dbg.output"
							multipleOfType="false" name="Linker output debug" outputNames="${ProjName}.axf"
							outputs="axf" primaryOutput="false">
						</outputType>
						<!-- <outputType buildVariable="ELF" id="se.aceone.mediatek.linkit.tool.linker.output" 
							name="Linker output" outputNames="${ProjName}.axf" outputs="elf" primaryOutput="true"> 
							</outputType> -->
					</tool>
					<tool announcement="Generating AXF data file"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${OBJCOPY}"
						commandLinePattern="&quot;${COMMAND}&quot; -g -R .comment  ${INPUTS}  ${OUTPUT} "
						id="se.aceone.mediatek.linkit.tool.objcopy.dbgdata" isAbstract="false"
						name="AXF data file" natureFilter="both">
						<inputType buildVariable="AXF_DATA"
							dependencyExtensions="axf"
							id="se.aceone.mediatek.linkit.tool.objcopy.data.input"
							multipleOfType="true" name="AXF data file input" primaryInput="true"
							sourceContentType="se.aceone.mediatek.linkit.tool.linker.data.output"
							sources="axf">
						</inputType>
						<outputType buildVariable="AXF_DATA_OUT"
							id="se.aceone.mediatek.linkit.tool.objcopy.data.output"
							multipleOfType="false" name="AXFdata file output" outputNames="${ProjName}.out.axf"
							outputs="out.afx" primaryOutput="true">
						</outputType>
					</tool>
					<tool announcement="Creating debug data only"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${OBJCOPY}"
						commandLinePattern="&quot;${COMMAND}&quot; --only-keep-debug ${INPUTS}  ${OUTPUT} "
						id="se.aceone.mediatek.linkit.tool.objcopy.dbg" isAbstract="false"
						name="Debug only data file" natureFilter="both">
						<inputType buildVariable="DBG" dependencyExtensions="axf"
							id="se.aceone.mediatek.linkit.tool.objcopy.dbg.input"
							multipleOfType="true" name="Debug data file input" primaryInput="true"
							sourceContentType="se.aceone.mediatek.linkit.tool.linker.dbg.output"
							sources="axf">
						</inputType>
						<outputType buildVariable="DBG_DATA"
							id="se.aceone.mediatek.linkit.tool.objcopy.dbg.output"
							multipleOfType="false" name="Debug data file output" outputNames="${ProjName}.dbg"
							outputs="dbg">
						</outputType>
					</tool>
					<!-- <tool announcement="Resource Packer" command="${TOOLPATH}/${RESEDITOR}" 
						commandLinePattern="${COMMAND} pack -silent -resolution 128x160 -o ${OUTPUT} 
						-e AXF -vom ${workspace_loc}/${ProjName}/${ProjName}.proj ${INPUTS}" id="se.aceone.mediatek.linkit.tool.packer" 
						isAbstract="false" name="Resource Packer" natureFilter="both"> <inputType 
						buildVariable="ELF" dependencyExtensions="elf" id="se.aceone.mediatek.linkit.tool.packer.input" 
						multipleOfType="true" name="Resource Packer input" primaryInput="true" sourceContentType="se.aceone.mediatek.linkit.tool.linker.output" 
						sources="eep"> </inputType> <outputType buildVariable="RES_PKD" id="se.aceone.mediatek.linkit.tool.packer.output" 
						multipleOfType="false" name="Resource Packer output" namePattern="${ProjName}.pkd" 
						outputNames="${ProjName}.pkd" outputs="pkd"> </outputType> </tool> -->
					<tool announcement="Size command"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${SIZETOOL}"
						commandLinePattern="&quot;${COMMAND}&quot; -A ${INPUTS}" id="se.aceone.mediatek.linkit.tool.size"
						name="Size">
						<inputType buildVariable="AXF_DATA_OUT"
							id="se.aceone.mediatek.linkit.tool.size.input" multipleOfType="false"
							name="Size input" primaryInput="true" sources="out.axf">
						</inputType>
						<inputType buildVariable="DBG_DATA"
							dependencyExtensions="dbg"
							id="se.aceone.mediatek.linkit.tool.size.input.dbg"
							multipleOfType="true" name="Size debug input" primaryInput="false">
						</inputType>
						<outputType buildVariable="SIZEDUMMY"
							id="se.aceone.mediatek.linkit.tool.size.output" multipleOfType="false"
							name="Size output" outputNames="sizedummy" outputs="${project}.size"
							primaryOutput="true">
						</outputType>
					</tool>
				</toolChain>
				<toolChain archList="all"
					id="se.aceone.mediatek.linkit.toolChain.default.rvct" isAbstract="false"
					name="LinkIt Tool Chain (RVCT)" osList="all"
					targetTool="se.aceone.mediatek.linkit.tool.objcopy.dbgdata.rvct">
					<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF "
						id="se.aceone.mediatek.linkit.targetplatform.rvct" name="LinkIt Target"
						osList="all">
					</targetPlatform>
					<builder
						buildfileGenerator="se.aceone.mediatek.linkit.toolchain.LinkItGnuMakefileGenerator"
						id="se.aceone.mediatek.linkit.builder.rvct"
						isVariableCaseSensitive="false" name="LinkIt Builder"
						reservedMacroNames="LinkItSDK10" superClass="se.aceone.mediatek.linkit.gnu.builder">
					</builder>
					<optionCategory
						id="se.aceone.mediatek.linkit.optionCategory.includePaths.rvct"
						name="Include Folders">
					</optionCategory>
					<tool announcement="Starting C++ compile"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${CPPCOMPILER}"
						commandLinePattern="&quot;${COMMAND}&quot; ${RVCTCOMPILER} ${FLAGS} -o ${OUTPUT} -c ${INPUTS}"
						errorParsers="se.aceone.mediatek.linkit.rvct.compiler" id="se.aceone.mediatek.linkit.compiler.cpp.rvct"
						name="C++ Compiler" natureFilter="both">
						<optionCategory
							id="se.aceone.mediatek.linkit.cpp.optionCategory.includePaths.rvct"
							name="Include Path">
						</optionCategory>
						<option browseType="directory"
							category="se.aceone.mediatek.linkit.cpp.optionCategory.includePaths.rvct"
							command="-I"
							id="se.aceone.mediatek.linkit.compiler.cpp.option.incpath.rvct"
							name="C++ Include Path" resourceFilter="project" valueType="includePath">
						</option>
						<optionCategory
							id="se.aceone.mediatek.linkit.cpp.optionCategory.macros.rvct"
							name="Macros">
						</optionCategory>
						<option browseType="none"
							category="se.aceone.mediatek.linkit.cpp.optionCategory.macros.rvct"
							command="-D"
							id="se.aceone.mediatek.linkit.compiler.cpp.option.macros.rvct"
							name="C++ Macros" resourceFilter="project" valueType="definedSymbols">
						</option>
						<inputType buildVariable="CPP_SKETCH_FILES"
							dependencyCalculator="se.aceone.mediatek.linkit.toolchain.LinkItDependencyCalculator"
							dependencyContentType="org.eclipse.cdt.core.cxxHeader" id="se.aceone.mediatek.linkit.input.rvct"
							name="C++ Source" primaryInput="true" sourceContentType="org.eclipse.cdt.core.cxxSource">
						</inputType>
						<outputType buildVariable="LINK_OBJ"
							id="se.aceone.mediatek.linkit.link.output.rvct" name="C++ Link Object"
							nameProvider="se.aceone.mediatek.linkit.toolchain.LinkNameProvider"
							outputs="o" primaryOutput="true">
						</outputType>
					</tool>
					<tool announcement="Starting C compile"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${CCOMPILER}"
						commandLinePattern="&quot;${COMMAND}&quot; ${RVCTCOMPILER} ${FLAGS} -o ${OUTPUT} -c ${INPUTS}"
						errorParsers="se.aceone.mediatek.linkit.rvct.compiler" id="se.aceone.mediatek.linkit.compiler.c.rvct"
						name="C Compiler" natureFilter="both">
						<optionCategory
							id="se.aceone.mediatek.linkit.c.optionCategory.includePaths.rvct"
							name="Include Path">
						</optionCategory>
						<option browseType="directory"
							category="se.aceone.mediatek.linkit.c.optionCategory.includePaths.rvct"
							command="-I"
							id="se.aceone.mediatek.linkit.compiler.c.option.incpath.rvct"
							name="C Include Path" resourceFilter="project" valueType="includePath">
						</option>
						<optionCategory
							id="se.aceone.mediatek.linkit.c.optionCategory.macros.rvct" name="Macros">
						</optionCategory>
						<option browseType="none"
							category="se.aceone.mediatek.linkit.c.optionCategory.macros.rvct"
							command="-D" id="se.aceone.mediatek.linkit.compiler.c.option.macros.rvct"
							name="C Macros" resourceFilter="project" valueType="definedSymbols">
						</option>
						<inputType buildVariable="C_SKETCH_FILES"
							dependencyCalculator="se.aceone.mediatek.linkit.toolchain.LinkItDependencyCalculator"
							dependencyContentType="org.eclipse.cdt.core.cHeader"
							id="se.aceone.mediatek.linkit.compiler.c.input.rvct"
							multipleOfType="false" name="C Source" primaryInput="true"
							sourceContentType="org.eclipse.cdt.core.cSource">
						</inputType>
						<outputType buildVariable="LINK_OBJ"
							id="se.aceone.mediatek.linkit.compiler.c.link.output.rvct" name="C Link Object"
							nameProvider="se.aceone.mediatek.linkit.toolchain.LinkNameProvider"
							outputs="o" primaryOutput="true">
						</outputType>
					</tool>
					<tool announcement="Starting Linker"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${LINK}"
						commandLineGenerator="se.aceone.mediatek.linkit.toolchain.RVCTLinkerCommadLineGenerator"
						commandLinePattern="&quot;${COMMAND}&quot; -o ${OUTPUT} ${INPUTS} ${RVCTLINKER} &quot;${LINKIT10}/${RVCTLIB}/${COMMONLIB}&quot; "
						errorParsers="se.aceone.mediatek.linkit.rvct.linker" id="se.aceone.mediatek.linkit.tool.linker.rvct"
						name="Linker" natureFilter="both">
						<inputType buildVariable="LINK_OBJ"
							id="se.aceone.mediatek.linkit.tool.linker.ob.input.rvct"
							multipleOfType="true" name="Linker input" primaryInput="true"
							sources="o">
						</inputType>
						<outputType buildVariable="AXF_DATA"
							id="se.aceone.mediatek.linkit.tool.linker.data.output.rvct"
							multipleOfType="false" name="Linker output axf" outputNames="${ProjName}.axf"
							outputs="axf" primaryOutput="true">
						</outputType>
					</tool>
					<tool announcement="Generating AXF data file"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${FROMELF}"
						commandLinePattern="&quot;${COMMAND}&quot; --output ${OUTPUT}  ${INPUTS} "
						id="se.aceone.mediatek.linkit.tool.objcopy.dbgdata.rvct"
						isAbstract="false" name="AXF data file" natureFilter="both">
						<inputType buildVariable="AXF_DATA"
							dependencyExtensions="axf"
							id="se.aceone.mediatek.linkit.tool.objcopy.data.input.rvct"
							multipleOfType="true" name="AXF data file input" primaryInput="true"
							sourceContentType="se.aceone.mediatek.linkit.tool.linker.data.output.rvct"
							sources="axf">
						</inputType>
						<outputType buildVariable="AXF_DATA_OUT"
							id="se.aceone.mediatek.linkit.tool.objcopy.data.output.rvct"
							multipleOfType="false" name="AXFdata file output" outputNames="${ProjName}.out.axf"
							outputs="out.afx" primaryOutput="true">
						</outputType>
					</tool>
				</toolChain>
				<toolChain archList="all"
					id="se.aceone.mediatek.linkit.toolChain.staticlib.rvct" isAbstract="false"
					name="LinkIt Tool Chain Static Lib (RVCT)" osList="all"
					targetTool="se.aceone.mediatek.linkit.tool.armar.rvct">
					<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF "
						id="se.aceone.mediatek.linkit.targetplatform.rvct.static" name="LinkIt Target"
						osList="all">
					</targetPlatform>
					<builder
						buildfileGenerator="se.aceone.mediatek.linkit.toolchain.LinkItGnuMakefileGenerator"
						id="se.aceone.mediatek.linkit.builder.rvct.static"
						isVariableCaseSensitive="false" name="LinkIt Static Builder"
						reservedMacroNames="LinkItSDK10" superClass="se.aceone.mediatek.linkit.gnu.builder">
					</builder>
					<optionCategory
						id="se.aceone.mediatek.linkit.optionCategory.includePaths.rvct.static"
						name="Include Folders">
					</optionCategory>
					<tool announcement="Starting C++ compile"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${CPPCOMPILER}"
						commandLinePattern="&quot;${COMMAND}&quot; ${RVCTTCCCOMPILER} ${FLAGS} -o ${OUTPUT} -c ${INPUTS}"
						errorParsers="se.aceone.mediatek.linkit.rvct.compiler" id="se.aceone.mediatek.linkit.compiler.cpp.rvct.static"
						name="C++ Compiler" natureFilter="both">
						<optionCategory
							id="se.aceone.mediatek.linkit.cpp.optionCategory.includePaths.rvct.static"
							name="Include Path">
						</optionCategory>
						<option browseType="directory"
							category="se.aceone.mediatek.linkit.cpp.optionCategory.includePaths.rvct.static"
							command="-I"
							id="se.aceone.mediatek.linkit.compiler.cpp.option.incpath.rvct.static"
							name="C++ Include Path" resourceFilter="project" valueType="includePath">
						</option>
						<optionCategory
							id="se.aceone.mediatek.linkit.cpp.optionCategory.macros.rvct.static"
							name="Macros">
						</optionCategory>
						<option browseType="none"
							category="se.aceone.mediatek.linkit.cpp.optionCategory.macros.rvct.static"
							command="-D"
							id="se.aceone.mediatek.linkit.compiler.cpp.option.macros.rvct.static"
							name="C++ Macros" resourceFilter="project" valueType="definedSymbols">
						</option>
						<inputType buildVariable="CPP_SKETCH_FILES"
							dependencyCalculator="se.aceone.mediatek.linkit.toolchain.LinkItDependencyCalculator"
							dependencyContentType="org.eclipse.cdt.core.cxxHeader" id="se.aceone.mediatek.linkit.input.rvct.static"
							name="C++ Source" primaryInput="true" sourceContentType="org.eclipse.cdt.core.cxxSource">
						</inputType>
						<outputType buildVariable="LINK_OBJ"
							id="se.aceone.mediatek.linkit.link.output.rvct.static" name="C++ Link Object"
							nameProvider="se.aceone.mediatek.linkit.toolchain.LinkNameProvider"
							outputs="o" primaryOutput="true">
						</outputType>
					</tool>
					<tool announcement="Starting C compile"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${TCCCOMPILER}"
						commandLinePattern="&quot;${COMMAND}&quot; ${RVCTTCCCOMPILER} ${FLAGS} -o ${OUTPUT} -c ${INPUTS}"
						errorParsers="se.aceone.mediatek.linkit.rvct.compiler" 
						id="se.aceone.mediatek.linkit.compiler.c.rvct.static"
						name="C Compiler" natureFilter="both">
						<optionCategory
							id="se.aceone.mediatek.linkit.c.optionCategory.includePaths.rvct.static"
							name="Include Path">
						</optionCategory>
						<option browseType="directory"
							category="se.aceone.mediatek.linkit.c.optionCategory.includePaths.rvct.static"
							command="-I"
							id="se.aceone.mediatek.linkit.compiler.c.option.incpath.rvct.static"
							name="C Include Path" resourceFilter="project" valueType="includePath">
						</option>
						<optionCategory
							id="se.aceone.mediatek.linkit.c.optionCategory.macros.rvct.static" name="Macros">
						</optionCategory>
						<option browseType="none"
							category="se.aceone.mediatek.linkit.c.optionCategory.macros.rvct.static"
							command="-D" id="se.aceone.mediatek.linkit.compiler.c.option.macros.rvct.static"
							name="C Macros" resourceFilter="project" valueType="definedSymbols">
						</option>
						<inputType buildVariable="C_SKETCH_FILES"
							dependencyCalculator="se.aceone.mediatek.linkit.toolchain.LinkItDependencyCalculator"
							dependencyContentType="org.eclipse.cdt.core.cHeader"
							id="se.aceone.mediatek.linkit.compiler.c.input.rvct.static"
							multipleOfType="false" name="C Source" primaryInput="true"
							sourceContentType="org.eclipse.cdt.core.cSource">
						</inputType>
						<outputType buildVariable="LINK_OBJ"
							id="se.aceone.mediatek.linkit.compiler.c.link.output.rvct.static" name="C Object"
							nameProvider="se.aceone.mediatek.linkit.toolchain.LinkNameProvider"
							outputs="o" primaryOutput="true">
						</outputType>
					</tool>
					<tool announcement="Starting ARMAR"
						command="${COMPILERPATH}/${COMPILERTOOLPATH}/${ARMAR}"
						commandLinePattern="&quot;${COMMAND}&quot; -r ${OUTPUT} ${INPUTS} "
						errorParsers="se.aceone.mediatek.linkit.rvct.linker" 
						id="se.aceone.mediatek.linkit.tool.armar.rvct"
						name="ARMAR" natureFilter="both">
						<inputType buildVariable="LINK_OBJ"
							id="se.aceone.mediatek.linkit.tool.armar.ob.input.rvct"
							multipleOfType="true" name="ARMAR input" primaryInput="true"
							sources="o">
						</inputType>
						<outputType
            buildVariable="AXF_DATA"
            id="se.aceone.mediatek.linkit.tool.armar.data.output.rvct"
            multipleOfType="false"
            name="ARMAR output a"
            outputs="a"
            primaryOutput="true">
						</outputType>
					</tool>
				</toolChain>
			</configuration>
		</projectType>
	</extension>
	<extension point="org.eclipse.ui.navigator.navigatorContent">
		<commonWizard associatedExtensionId="org.eclipse.cdt.ui.navigator.content"
			menuGroupId="org.eclipse.cdt.ui.newProject" type="new"
			wizardId="se.aceone.mediatek.linkit.NewLinkit10ProjectWizard">

			<enablement>
				<or>
					<with variable="activeWorkbenchWindow.activePerspective">
						<equals value="org.eclipse.cdt.ui.CPerspective">
						</equals>
					</with>
					<instanceof value="org.eclipse.cdt.core.model.ICElement" />
					<and>
						<instanceof value="org.eclipse.core.resources.IProject" />
						<test property="org.eclipse.core.resources.projectNature"
							value="org.eclipse.cdt.core.cnature">
						</test>
					</and>
				</or>
			</enablement>
		</commonWizard>
		<commonWizard associatedExtensionId="org.eclipse.cdt.ui.navigator.content"
			menuGroupId="org.eclipse.cdt.ui.newProject" type="new"
			wizardId="se.aceone.mediatek.linkit.NewLinkit20ProjectWizard">
			<enablement>
				<or>
					<with variable="activeWorkbenchWindow.activePerspective">
						<equals value="org.eclipse.cdt.ui.CPerspective">
						</equals>
					</with>
					<instanceof value="org.eclipse.cdt.core.model.ICElement" />
					<and>
						<instanceof value="org.eclipse.core.resources.IProject" />
						<test property="org.eclipse.core.resources.projectNature"
							value="org.eclipse.cdt.core.cnature">
						</test>
					</and>
				</or>
			</enablement>
		</commonWizard>

	</extension>
	<extension point="org.eclipse.ui.preferencePages">
		<page name="LinkIt" class="se.aceone.mediatek.linkit.ui.LinkItPreferencePage"
			id="se.aceone.mediatek.linkit.ui.LinkItPreferencePage">
		</page>
		<page category="se.aceone.mediatek.linkit.ui.LinkItPreferencePage"
			class="se.aceone.mediatek.linkit.ui.LinkItPreferencePageSDK20" id="se.aceone.mediatek.linkit.ui.Sdk20PreferencePage"
			name="SDK 2.0 (Assist)">
		</page>
		<page category="se.aceone.mediatek.linkit.ui.LinkItPreferencePage"
			class="se.aceone.mediatek.linkit.ui.LinkItPreferencePageSDK10" id="se.aceone.mediatek.linkit.ui.Sdk10PreferencePage"
			name="SDK 1.0">
		</page>
	</extension>
	<extension point="org.eclipse.ui.commands">
		<category id="se.aceone.mediatek.linkit.commands.category"
			name="LinkIt">
		</category>
		<command categoryId="se.aceone.mediatek.linkit.commands.category"
			id="se.aceone.mediatek.linkit.commands.pack" name="Pack Command">
		</command>
		<command categoryId="se.aceone.mediatek.linkit.commands.category"
			id="se.aceone.mediatek.linkit.commands.updateproj" name="Update project file">
		</command>
	</extension>
	<extension point="org.eclipse.ui.menus">
		<menuContribution locationURI="menu:org.eclipse.ui.main.menu?after=additions">
			<menu id="se.aceone.mediatek.linkit.menus.pack" label="LinkIt">
				<visibleWhen checkEnabled="true">
					<or>
						<with variable="activeWorkbenchWindow.activePerspective">
							<equals value="org.eclipse.cdt.ui.CPerspective">
							</equals>
						</with>
						<instanceof value="org.eclipse.cdt.core.model.ICElement">
						</instanceof>
						<and>
							<instanceof value="org.eclipse.core.resources.IProject">
							</instanceof>
							<test property="org.eclipse.core.resources.projectNature"
								value="org.eclipse.cdt.core.cnature">
							</test>
						</and>
					</or>

				</visibleWhen>
				<command commandId="se.aceone.mediatek.linkit.commands.pack"
					id="se.aceone.mediatek.linkit.menus.pack" mnemonic="P">
				</command>
				<command commandId="se.aceone.mediatek.linkit.commands.updateproj"
					id="se.aceone.mediatek.linkit.menus.updateproj">
				</command>
			</menu>
		</menuContribution>
		<menuContribution
			locationURI="toolbar:org.eclipse.ui.main.toolbar?after=additions">
			<toolbar id="se.aceone.mediatek.linkit.toolbars.pack">
				<command commandId="se.aceone.mediatek.linkit.commands.pack"
					icon="icons/App-package-icon16px.png" id="se.aceone.mediatek.linkit.toolbars.pack"
					tooltip="LinkIt vpx packer">
					<visibleWhen checkEnabled="true">
						<or>
							<with variable="activeWorkbenchWindow.activePerspective">
								<equals value="org.eclipse.cdt.ui.CPerspective">
								</equals>
							</with>
							<instanceof value="org.eclipse.cdt.core.model.ICElement">
							</instanceof>
							<and>
								<instanceof value="org.eclipse.core.resources.IProject">
								</instanceof>
								<test property="org.eclipse.core.resources.projectNature"
									value="org.eclipse.cdt.core.cnature">
								</test>
							</and>
						</or>

					</visibleWhen>
				</command>
			</toolbar>
		</menuContribution>
	</extension>
	<extension point="org.eclipse.ui.bindings">
		<key commandId="se.aceone.mediatek.linkit.commands.pack"
			contextId="org.eclipse.ui.contexts.window" schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1 + P">
		</key>
	</extension>
	<extension point="org.eclipse.ui.handlers">
		<handler class="se.aceone.mediatek.linkit.handlers.LinkItProjectPackHandler"
			commandId="se.aceone.mediatek.linkit.commands.pack">
			<activeWhen>
				<with variable="selection">
					<iterate ifEmpty="true" operator="and">
			           <adapt type="org.eclipse.core.resources.IResource">
				            <test property="org.eclipse.core.resources.projectNature"
				                  value="org.eclipse.cdt.managedbuilder.core.managedBuildNature"/>
			           </adapt>
					</iterate>
				</with>
				</activeWhen>
		</handler>
		<handler class="se.aceone.mediatek.linkit.handlers.UpdateProjectFile"
			commandId="se.aceone.mediatek.linkit.commands.updateproj">
			<activeWhen>
				<with variable="selection">
					<iterate ifEmpty="true" operator="and">
						<adapt type="org.eclipse.core.resources.IResource">
							<or>
								<test property="org.eclipse.core.resources.extension"
									value="proj">
								</test>
								<test property="org.eclipse.core.resources.extension"
									value="vcproj">
								</test>
							</or>
						</adapt>
					</iterate>
				</with>
			</activeWhen>
		</handler>

	</extension>
	<extension id="se.aceone.mediatek.linkit.errorparser.compiler"
		name="LinkIt Error parser Compiler" point="org.eclipse.cdt.core.ErrorParser">
		<errorparser id="se.aceone.mediatek.linkit.rvct.compiler"
			name="RVCT Compiler Error parser">
			<pattern description-expr="$7" eat-processed-line="true"
				file-expr="$1" line-expr="$3"
				regex="&quot;(.*?)&quot;(.*\s)(\d+):\s*(([Ee]rror)|(ERROR)):\s*(.*)"
				severity="Error">
			</pattern>
			<pattern description-expr="$7" eat-processed-line="true"
				file-expr="$1" line-expr="$3"
				regex="&quot;(.*?)&quot;(.*\s)(\d+):\s*(([Ww]arning)|(WARNING)):\s*(.*)"
				severity="Warning">
			</pattern>
			<pattern description-expr="$9" eat-processed-line="true"
				file-expr="$1" line-expr="$3"
				regex="&quot;(.*?)&quot;(.*\s)(\d+):\s*(([Nn]ote)|(NOTE)|([Ii]nfo)|(INFO)):\s*(.*)"
				severity="Info">
			</pattern>
		</errorparser>
	</extension>
	<extension id="se.aceone.mediatek.linkit.errorparser.linker"
		name="LinkIt Error parser Linker" point="org.eclipse.cdt.core.ErrorParser">
		<errorparser id="se.aceone.mediatek.linkit.rvct.linker"
			name="RVCT Linker Error parser">
			<pattern description-expr="$5" eat-processed-line="true"
				regex="(([Ee]rror)|(ERROR)):\s*(.*):\s*(.*)" severity="Error">
			</pattern>
			<pattern description-expr="$5" eat-processed-line="true"
				regex="(([Ww]arning)|(WARNING)):\s*(.*):\s*(.*)" severity="Warning">
			</pattern>
			<pattern description-expr="$7" eat-processed-line="true"
				regex="(([Nn]ote)|(NOTE)|([Ii]nfo)|(INFO)):\s*(.*):\s*(.*)"
				severity="Info">
			</pattern>
		</errorparser>
	</extension>
</plugin>
